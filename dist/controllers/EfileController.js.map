{"version":3,"sources":["../../src/controllers/EfileController.js"],"names":["createEfile","req","res","body","Object","assign","pending_recipient","recipient","Efile","create","err","data","status","send","findAllEfiles","find","findAllPendingEfileById","searchObj","params","userId","$where","pageInput","query","page","paginatedSearch","findAllPublicPublishedEfile","efileName","name","sender","createdAt","private_doc","publish","RegExp","_","isEmpty","created_at","$gte","Date","toISOString","console","log","findAllRejectedEfileByUserId","user_id","findAllPrivatePublishedEfileByUserId","$or","$elemMatch","id","paginatedEfile","next","isNaN","paginate","limit","findEfileById","efileId","findById","exec","message","updateEfile","save","approveEfile","cbApproveEfile","length","approved_recipient","approve_user_details","approve_user","shift","signatures","escape","signature","first_name","middle_name","last_name","position","push","updated_recipients","content","unescape","substring","updatedContentWithSignature","publishedEfile","deleteEfile","findOneAndRemove","_id"],"mappings":"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","file":"EfileController.js","sourcesContent":["import Efile from './../schemas/Efile'\nimport _ from 'lodash'\n\n//create efile\nexport const createEfile =(req, res)=> {\n    let body = req.body\n    //copy the values of recipient to pending recipients\n    body = Object.assign( body, {pending_recipient : req.body.recipient} )\n\n    Efile.create(body, (err, data) => \n        err ? res.status(422).send(err) : res.status(201).send(data)\n    )\n    \n}//@end\n\n//read all data\nexport const findAllEfiles =(req, res)=> {\n    //exclude content\n    Efile.find({}, '-content', (err, data) => err ? res.status(500).send(err) : res.send(data) ) \n}//@end\n\n//read all data\nexport const findAllPendingEfileById =(req, res)=> {\n    //search all pending efile that a specific user has by id, disregard content\n    const searchObj = {\n        \"pending_recipient.0.id\" :  req.params.userId,\n        $where: \"this.rejected_recipient ===  null\"\n    } \n    let pageInput = req.query.page\n    paginatedSearch(searchObj, pageInput, res)\n}//@end\n\n//read all data\nexport const findAllPublicPublishedEfile =(req, res)=> {\n    const efileName = req.query.name\n    const sender = req.query.sender\n    const recipient = req.query.recipient\n    const createdAt = req.query.createdAt\n   \n    // _.isEmpty(createdAt) ? createdAt = null : createdAt = new Date( req.query.createdAt ).toISOString() \n\n    let searchObj = {\n        private_doc : false, \n        publish: true,\n        name: new RegExp( efileName, 'i'),\n        'recipient.name': new RegExp( recipient, 'i'),\n        'sender.name': new RegExp( sender, 'i'),\n        // created_at: new RegExp( createdAt, 'i'),\n    }\n\n    // if createdAt not empty add search to db\n    if( !_.isEmpty(createdAt) ) {\n        searchObj  = { ...searchObj , ...{ created_at: { $gte: new Date( req.query.createdAt ).toISOString()  } } }\n    }  \n  \n    console.log(searchObj)\n    \n\n    const pageInput = req.query.page\n    // Object.keys(searchObj).forEach((key) => (searchObj[key] == null) && delete searchObj[key])\n    paginatedSearch(searchObj, pageInput, res)\n}//@end\n\n//read all data\nexport const findAllRejectedEfileByUserId =(req, res)=> {\n    const user_id = req.params.userId\n    // find all rejected efiles where the sender is you\n    const searchObj = {\n        'sender.id': user_id, \n        $where: \"this.rejected_recipient !==  null\"\n    }\n    const pageInput = req.query.page\n    paginatedSearch(searchObj, pageInput, res)\n}//@end\n\n//read all data\nexport const findAllPrivatePublishedEfileByUserId =(req, res)=> {\n    const user_id = req.params.userId\n    const pageInput = req.query.page\n    const efileName = req.query.name\n    const sender = req.query.sender\n    const recipient = req.query.recipient\n    const createdAt = req.query.createdAt\n\n    // const searchName = req.query.name\n\n    let searchObj ={//find all private efile that has been published that you have access\n        private_doc: true,//it is a private doc\n        publish: true,// it is published\n        name: new RegExp( efileName, 'i'),\n        'recipient.name': new RegExp( recipient, 'i'),\n        'sender.name': new RegExp( sender, 'i'),\n        \n        //should get all the published private efile if the user is either the sender or recipient\n        $or: [\n            { \n                recipient: { \n                    $elemMatch:{\n                        //any record on arrays of object containing the id will be displayed\n                        id : user_id\n                    }\n                } \n            },\n            \n            \n            {//check if the sender is you\n                'sender.id': user_id\n            } \n        ],//or\n        \n    }//sender object\n\n    // if createdAt not empty add search to db\n    if( !_.isEmpty(createdAt) ) {\n        searchObj  = { ...searchObj , ...{ created_at: { $gte: new Date( req.query.createdAt ).toISOString()  } } }\n    }  \n    \n    paginatedSearch(searchObj, pageInput, res)\n}//@end\n\n//get efile list with pagination\nexport const paginatedEfile =(req, res, next)=> {\n    if( isNaN(req.query.page) ){ \n        next() \n    }else{\n        Efile.paginate( Efile.find({}, '-content') ,{ page: req.query.page, limit: 10 }, (err, data) =>{\n            err ? res.status(500).send(err) : res.send(data) \n        })\n    }\n}//@end\n\n//read one data\nexport const findEfileById =(req, res)=> {\n    const id = req.params.efileId\n    Efile.findById(id).exec( (err, data) =>{\n        if(err){\n            res.status(500).send({message : `no user found at id : ${id}`})\n        }else{\n            (data !== null) ? res.send(data) :\n            res.status(404).send( {message : `no user found at id : ${id}`} )\n        }\n    })\n}//@end\n\n//update one by id\nexport const updateEfile =(req, res)=> {\n    const id = req.params.efileId\n\n    Efile.findById(id, (err, data) =>{//fetch the data from id\n        if(err){\n            res.status(404).send( {message : `no user found at id : ${req.params.id}`} )\n        }else{\n            const body = Object.assign( data, req.body )//overwrite the data \n            body.save( (err, data) =>  err ? res.send(err) : res.send(data) )//update the data from db\n        }//else\n\n    })\n    \n}//@end\n\n//approve efile\n//this needs to be refactor\nexport const approveEfile =(req, res)=> {\n    const id = req.params.efileId\n   \n\n    const cbApproveEfile = (err, data) =>{//fetch the data from id\n        if(err){\n            res.status(404).send( {message : `no efile found at id : ${req.params.id}`} )\n        }else{\n            if(!data.pending_recipient.length){//check if no more pending recipients\n                res.status(400).send({message: `efile : ${id} , was already published`})\n            }else{\n                \n                let pending_recipient = data.pending_recipient\n                let approved_recipient = data.approved_recipient\n                \n                const approve_user_details = req.body\n                \n\n\n                //remove the first recipient of the pending recipient to be transfer to approve recipient\n                let approve_user = pending_recipient.shift()\n                //get the old signature\n                let signatures = data.signatures\n                //append another signature\n                signatures += escape(`<span>\n                                        <div style='display:inline-block !important; text-align:center !important; padding-left:10px !important; padding-right:10px !important;'>\n                                        <img src='${approve_user_details.signature}' width='150'>\n                                        <br> ${approve_user_details.name.first_name} ${approve_user_details.name.middle_name} ${approve_user_details.name.last_name} <br>\n                                        ${approve_user_details.position}\n                                        </div>\n                                    <span>`)\n \n\n                //add the recipient who approved the efile to the approved recipient\n                approved_recipient.push(approve_user)\n    \n                let updated_recipients = {\n                    approved_recipient : approved_recipient,\n                    pending_recipient : pending_recipient,\n                    signatures: signatures\n                }\n    \n                //check if pending recipients is empty\n                if(!pending_recipient.length){\n                    //make the efile publish if no more pending recipients\n\n\n                    let content = unescape(data.content)\n                    // remove the </body> </html> on the end to append the signature\n                    content = content.substring(0, content.length - 20)\n                    // insert the signature at the end and add </body> </html>\n                    content = ` ${content}  <div style='text-align: center !important'> ${unescape(updated_recipients.signatures)}</div></body></html>`\n\n                    let updatedContentWithSignature = escape(content)\n                    // let updatedContentWithSignature = content\n\n                    const publishedEfile = Object.assign( updated_recipients, {content: updatedContentWithSignature, publish : true} )\n                    const body = Object.assign( data, publishedEfile )\n\n                    //update efile content here \n\n                    body.save( (err, data) =>  err ? res.send(err) : res.send(data) )//update the data from db\n                }else{//just update the pending & approved recipients\n                    const body = Object.assign( data, updated_recipients )//overwrite the data \n                    body.save( (err, data) =>  err ? res.send(err) : res.send(data) )//update the data from db\n                }//else\n                \n            }//else\n    \n        }//else\n    \n    }//cbApproveEfile\n\n    Efile.findById(id, cbApproveEfile)   \n}//@end\n\n\n//delete one data by id\nexport const deleteEfile =(req, res)=> {\n    const id = req.params.efileId\n    Efile.findOneAndRemove({ _id: id },(err, data) =>{\n        err ? res.status(404).send( {message : `no user found at id : ${id}`} ) \n        : res.status(200).send( {message : `user deleted at id : ${id}`} )\n    })\n}//@end\n\n\n\n\n//////////////////\n//reusable method for searching query strings\nconst paginatedSearch = (searchObj, pageInput=1, res)=>{\n    Efile.paginate( Efile.find(searchObj, '-content'), { page: pageInput, limit: 10 }, (err, data) =>{\n        err ? res.status(500).send(err) : res.send(data) \n    })\n}\n\n \n"]}