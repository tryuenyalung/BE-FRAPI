{"version":3,"sources":["../../src/controllers/UserController.js"],"names":["saltRounds","addUser","req","res","Users","findOne","username","body","err","userData","status","send","errors","bcrypt","hash","password","then","hashedPassword","Object","assign","create","data","paginatedUser","next","isNaN","query","page","paginate","limit","findAllUsers","find","findUserById","id","params","userId","findById","exec","message","updateUser","save","updateUserPassword","deleteUser","findOneAndRemove","_id","searchQuery","gender","searchObj","findByQueryString","address","RegExp","statusInput","department","position","dateOfBirth","name","$or","pageInput"],"mappings":"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","file":"UserController.js","sourcesContent":["import Users from './../schemas/Users'\nimport bcrypt from 'bcrypt'\n\nconst saltRounds = 10\n\n//create data\nexport const addUser =(req, res)=> {\n    //check if username already exist\n    Users.findOne( {username : req.body.username} , (err, userData) => {\n        \n        if(userData !== null){//check if the return data is empty\n            res.status(400).send({errors : `username: ${req.body.username} already exist`})\n        }else{\n            //hash the password \n            bcrypt.hash(req.body.password, saltRounds).then( (hashedPassword) => {\n                //update the password the req.body\n                let userData = Object.assign( req.body, {password: hashedPassword} )\n\n                Users.create(userData, (err, data) => \n                    err ? res.status(422).send(err) : res.status(201).send(data)\n                )\n            })//bcrypt\n\n        }//else\n\n    })//findOne\n    \n}//@end\n\n//get user list with pagination\nexport const paginatedUser =(req, res, next)=> {\n    if( isNaN(req.query.page) ){ \n        next() \n    }else{\n        Users.paginate({}, { page: req.query.page, limit: 10 }, (err, data) =>{\n            err ? res.status(500).send(err) : res.send(data) \n        })\n    }\n    \n}//@end\n\n\n//read all data\nexport const findAllUsers =(req, res)=> {\n    Users.find({}, (err, data) => err ? res.status(500).send(err) : res.send(data) ) \n}//@end\n\n//read one data\nexport const findUserById =(req, res)=> {\n    const id = req.params.userId\n    Users.findById(id).exec( (err, data) =>{\n        if(err){\n            res.status(500).send({message : `no user found at id : ${id}`})\n        }else{\n            (data !== null) ? res.send(data) :\n            res.status(404).send( {message : `no user found at id : ${id}`} )\n        }\n    })\n}//@end\n\n//update one by id\nexport const updateUser =(req, res)=> {\n    const id = req.params.userId;\n\n    Users.findById(id, (err, data) =>{//fetch the data from id\n        if(err){\n            res.status(404).send( {message : `no user found at id : ${req.params.id}`} )\n        }else{\n            const body = Object.assign( data, req.body )//overwrite the data \n            body.save( (err, data) =>  err ? res.send(err) : res.send(data) )//update the data from db\n        }//else\n\n    })\n    \n}//@end\n\n//update user's password by id\nexport const updateUserPassword =(req, res)=> {\n    const id = req.params.userId;\n\n    Users.findById(id, (err, data) =>{//fetch the data from id\n        if(err){\n            res.status(404).send( {message : `no user found at id : ${req.params.id}`} )\n        }else{\n            let body = Object.assign( data, req.body )//overwrite the data \n\n            bcrypt.hash(body.password, saltRounds).then( (hashedPassword) => {\n                //update the password on the body\n                Object.assign( body, {password: hashedPassword} )\n\n                body.save( (err, data) =>  err ? res.send(err) : res.send(data) )//update the data from db\n\n            })//bcrypt\n\n        }//else\n\n    })\n}//@end\n\n//delete one data by id\nexport const deleteUser =(req, res)=> {\n    const id = req.params.userId\n    Users.findOneAndRemove({ _id: id },(err, data) =>{\n            err ? res.status(404).send( {message : `no user found at id : ${id}`} ) \n            : res.status(200).send( {message : `user deleted at id : ${id}`} )\n    })\n}//@end\n\n//search by query strings\nexport const searchQuery =(req, res)=> {\n\n    if(req.query.gender){\n        let searchObj = { gender: req.query.gender }\n        let page = req.query.page\n        findByQueryString(searchObj, page ,res)\n    }\n    else if(req.query.address){\n        let searchObj = { address: new RegExp(req.query.address, 'i') }\n        let page = req.query.page\n        findByQueryString(searchObj, page ,res)\n    }\n\n    // DO NOT DELETE! \n    // else if(req.query.status){// y = true , any character(but intercepted on validator, use n for false) = false\n    //     let statusInput = false\n\n    //     req.query.status === 'y' ? statusInput = true : statusInput = false \n\n    //     let searchObj = { status: statusInput }\n    //     let page = req.query.page\n    //     findByQueryString(searchObj, page ,res)\n    // }\n\n    else if(req.query.status){// y = true , any character(but intercepted on validator, use n for false) = false\n        let statusInput = false\n        req.query.status === 'y' ? statusInput = true : statusInput = false \n        let searchObj = { status: true }\n        Users.find(searchObj, (err, data) => err ? res.status(500).send(err) : res.send(data) ) \n    }\n\n    else if(req.query.department){\n        let searchObj = { department: new RegExp(req.query.department, 'i') }\n        let page = req.query.page\n        findByQueryString(searchObj, page ,res)\n    }\n    else if(req.query.position){\n        let searchObj = { position: new RegExp(req.query.position, 'i') }\n        let page = req.query.page\n        findByQueryString(searchObj, page ,res)\n    }\n    else if(req.query.dateOfBirth){\n        let searchObj = { dateOfBirth: new RegExp(req.query.dateOfBirth, 'i') }\n        let page = req.query.page\n        findByQueryString(searchObj, page ,res)\n    }\n    else if(req.query.username){\n        let searchObj = { username: new RegExp(req.query.username, 'i') }\n        let page = req.query.page\n        findByQueryString(searchObj, page ,res)\n    }\n    else if(req.query.name){\n        let searchObj = {\n                    $or: [ \n                        { 'name.first_name' : new RegExp(req.query.name, 'i' ) },\n                        { 'name.last_name' : new RegExp(req.query.name, 'i' ) },\n                        { 'name.middle_name' : new RegExp(req.query.name, 'i' ) }\n                    ]\n                }\n        let page = req.query.page\n        findByQueryString(searchObj, page ,res)\n    }\n    else{\n        let searchObj = req.query\n        let page = req.query.page\n        findByQueryString(searchObj, page ,res)\n    }\n     \n}//@end\n\n//reusable method for searching query strings\nconst findByQueryString = (searchObj, pageInput, res)=>{\n    Users.paginate( Users.find(searchObj), { page: pageInput, limit: 10 }, (err, data) =>{\n        err ? res.status(500).send(err) : res.send(data) \n    })\n}"]}