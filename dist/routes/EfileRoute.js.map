{"version":3,"sources":["../../src/routes/EfileRoute.js"],"names":["EfileController","GenericValidator","EfileValidator","router","express","Router","get","paginatedEfile","findAllEfiles","findEfileById","findAllPendingEfileById","findAllPublicPublishedEfile","findAllRejectedEfileByUserId","findAllPrivatePublishedEfileByUserId","put","approveEfile","post","postReqValidate","createEfile","updateEfile","delete","deleteEfile"],"mappings":";;;;;;AAAA;;;;AACA;;IAAYA,e;;AACZ;;IAAYC,gB;;AACZ;;IAAYC,c;;;;;;AAGZ,IAAMC,SAASC,kBAAQC,MAAR,EAAf;;AAGAF,OAAOG,GAAP,CAAW,GAAX;AACI;AACAN,gBAAgBO,cAFpB,EAGIP,gBAAgBQ,aAHpB;;AAMAL,OAAOG,GAAP,CAAW,WAAX;AACI;AACAN,gBAAgBS,aAFpB;;AAMA;AACAN,OAAOG,GAAP,CAAW,kBAAX,EACIN,gBAAgBU,uBADpB;;AAIA;AACAP,OAAOG,GAAP,CAAW,mBAAX,EACIN,gBAAgBW,2BADpB;;AAIA;AACAR,OAAOG,GAAP,CAAW,mBAAX,EACIN,gBAAgBY,4BADpB;;AAIAT,OAAOG,GAAP,CAAW,iCAAX,EACIN,gBAAgBa,oCADpB;;AAIA;AACAV,OAAOW,GAAP,CAAW,mBAAX,EACId,gBAAgBe,YADpB;;AAIA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;AAKA;AACA;AACA;AACA;;;AAGAZ,OAAOa,IAAP,CAAY,GAAZ,EACId,eAAee,eADnB,EAEIjB,gBAAgBkB,WAFpB;;AAKAf,OAAOW,GAAP,CAAW,WAAX;AACI;AACAd,gBAAgBmB,WAFpB;;AAKAhB,OAAOiB,MAAP,CAAc,WAAd;AACI;AACApB,gBAAgBqB,WAFpB;;kBAMelB,M","file":"EfileRoute.js","sourcesContent":["import express from 'express'\nimport * as EfileController from './../controllers/EfileController'\nimport * as GenericValidator from './../validators/GenericValidator'\nimport * as EfileValidator from './../validators/EfileValidator'\n\n\nconst router = express.Router()\n\n \nrouter.get('/', \n    //check if it has query page=number\n    EfileController.paginatedEfile, \n    EfileController.findAllEfiles\n)\n\nrouter.get('/:efileId', \n    // GenericValidator.validateObjectId,\n    EfileController.findEfileById\n)\n \n \n//find all the pending recipients for specific user\nrouter.get('/pending/:userId', \n    EfileController.findAllPendingEfileById\n)\n\n//find all public efile that has been published\nrouter.get('/published/public', \n    EfileController.findAllPublicPublishedEfile\n)\n\n//find all rejected efile the user has\nrouter.get('/rejected/:userId', \n    EfileController.findAllRejectedEfileByUserId\n)\n\nrouter.get('/published/private/user/:userId', \n    EfileController.findAllPrivatePublishedEfileByUserId\n)\n\n// approve the efile\nrouter.put('/approve/:efileId', \n    EfileController.approveEfile\n)\n\n// jwt in the interceptor\n// router.post('/reject/:efileId', \n   \n// )\n\n// jwt in the interceptor\n// router.get('/publish/:efileId', \n   \n// )\n\n\n\n\n// router.get('/search', \n//     UserValidator.validateQueryString,\n//     UserController.searchQuery\n// )\n          \n\nrouter.post(\"/\",\n    EfileValidator.postReqValidate,\n    EfileController.createEfile\n)\n\nrouter.put('/:efileId', \n    // GenericValidator.validateObjectId,\n    EfileController.updateEfile\n)\n\nrouter.delete('/:efileId', \n    // GenericValidator.validateObjectId,\n    EfileController.deleteEfile\n)\n\n\nexport default router\n"]}