{"version":3,"sources":["../../src/schemas/Users.js"],"names":["timestamps","createdAt","updatedAt","Users","mongoose","Schema","username","type","String","required","password","avatar","default","keys","DEFAULT_AVATAR","name","Name","gender","enum","values","message","dateOfBirth","address","department","position","signature","status","Boolean","plugin","mongoosePaginate","model"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,aAAa;AACfC,eAAW,YADI;AAEfC,eAAW;AAFI,CAAnB;;AAKA,IAAIC,QAAQC,mBAASC,MAAT,CAAgB;;AAExBC,cAAW;AACPC,cAAMC,MADC;AAEPC,kBAAW,CAAC,IAAD,EAAO,mCAAP;AAFJ,KAFa;;AAOxBC,cAAU;AACNH,cAAMC,MADA;AAENC,kBAAW,CAAC,IAAD,EAAO,mCAAP;AAFL,KAPc;;AAYxBE,YAAO;AACHJ,cAAMC,MADH;AAEHI,iBAASC,eAAKC;AAFX,KAZiB;;AAiBxBC,UAAOC,cAjBiB;;AAmBxBC,YAAQ;AACJV,cAAMC,MADF;AAEJU,cAAM;AACFC,oBAAQ,CAAC,MAAD,EAAS,QAAT,CADN;AAEFC,qBAAS;AAFP,SAFF;AAMJX,kBAAW,CAAC,IAAD,EAAO,iCAAP;AANP,KAnBgB;;AA4BxBY,iBAAc;AACVd,cAAMC,MADI;AAEVC,kBAAW,CAAC,IAAD,EAAO,sCAAP;AAFD,KA5BU;;AAiCxBa,aAAU;AACNf,cAAMC,MADA;AAENC,kBAAW,CAAC,IAAD,EAAO,kCAAP;AAFL,KAjCc;;AAsCxBc,gBAAa;AACThB,cAAMC,MADG;AAETC,kBAAW,CAAC,IAAD,EAAO,qCAAP;AAFF,KAtCW;;AA2CxBe,cAAW;AACPjB,cAAMC,MADC;AAEPC,kBAAW,CAAC,IAAD,EAAO,mCAAP;AAFJ,KA3Ca;;AAgDxBgB,eAAW;AACPlB,cAAMC,MADC;AAEPC,kBAAW,CAAC,IAAD,EAAO,oCAAP;AAFJ,KAhDa;;AAqDxBiB,YAAO;AACHnB,cAAMoB,OADH;AAEHf,iBAAS;AAFN;;AArDiB,CAAhB,EA0DT,EAAEZ,sBAAF,EA1DS,CAAZ;;AA6DA;AACAG,MAAMyB,MAAN,CAAaC,0BAAb;;AAEA;kBACezB,mBAAS0B,KAAT,CAAe,OAAf,EAAwB3B,KAAxB,C","file":"Users.js","sourcesContent":["import mongoose from 'mongoose'\nimport mongoosePaginate from 'mongoose-paginate'\nimport Name from './Name'\nimport keys from './../keys'\n\n//adding createdAt and updatedAt field\nconst timestamps = {\n    createdAt: 'created_at',\n    updatedAt: 'update_at'\n}\n\nlet Users = mongoose.Schema({\n\n    username:  {\n        type: String,\n        required : [true, \"User Schema: username is required\"]\n    },\n\n    password: {\n        type: String,\n        required : [true, \"User Schema: password is required\"]\n    },\n\n    avatar:{\n        type: String,\n        default: keys.DEFAULT_AVATAR\n    },\n\n    name : Name,\n\n    gender: {\n        type: String,\n        enum: {\n            values: ['male', 'female'], \n            message: 'User Schema: gender must only be male or female'\n        },\n        required : [true, \"User Schema: gender is required\"]\n    },\n\n    dateOfBirth:  {\n        type: String,\n        required : [true, \"User Schema: dateOfBirth is required\"]\n    },\n\n    address:  {\n        type: String,\n        required : [true, \"User Schema: address is required\"]\n    },\n\n    department:  {\n        type: String,\n        required : [true, \"User Schema: department is required\"]\n    },\n\n    position:  {\n        type: String,\n        required : [true, \"User Schema: position is required\"]\n    },\n\n    signature: {\n        type: String,\n        required : [true, \"User Schema: signature is required\"]\n    },\n\n    status:{\n        type: Boolean,\n        default: false\n    },\n\n}, { timestamps })\n\n\n//adding pagination plugin for mongoose\nUsers.plugin(mongoosePaginate)\n\n// mongoose.model(documentName, exportName)\nexport default mongoose.model(\"users\", Users)"]}